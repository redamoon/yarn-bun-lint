

18 秒 の間、Reasoned about GitHub Actions CI setup
Setting up CI workflows

I'm thinking through two GitHub Actions workflows for a Next project with ESLint, one for Yarn and another for Bun, ensuring each pull request branch reflects the corresponding tool.

Establishing GitHub Actions

I’m setting up separate GitHub Actions workflows for Yarn and Bun in a Next.js project, ensuring each configuration aligns with the corresponding tool and ESLint integration.

以下では、Yarn 用と Bun 用で別々の GitHub Actions ワークフローを用意し、プルリクエスト先ブランチをそれぞれ develop-yarn・develop-bun として設定した例を示します。
（ファイル名はわかりやすいように、ci-yarn.yml と ci-bun.yml としています）

1. Next.js + ESLint プロジェクトを作成 (Yarn)
まずは Yarn を使って Next.js プロジェクトを作成し、ESLint を設定します。

bash
コピーする
編集する
npx create-next-app@latest --use-yarn --eslint my-next-yarn-app
これで以下のような構成のプロジェクトができあがります（抜粋）:

csharp
コピーする
編集する
my-next-yarn-app
├── package.json
├── yarn.lock
├── .eslintrc.json  // eslint が設定された状態
├── .gitignore
├── pages
└── ...
1.1. .github/workflows/ci-yarn.yml (例)
yaml
コピーする
編集する
name: CI (Yarn)

on:
  pull_request:
    branches:
      - develop-yarn  # PR先ブランチが 'develop-yarn' の場合のみ実行

jobs:
  build-and-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install dependencies (Yarn)
        run: yarn install

      - name: ESLint check
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test
on.pull_request.branches で develop-yarn を指定することにより、
そのブランチに対して行われるプルリクだけがトリガーになるようにしています。
Next.js プロジェクトでは、Lint → Build → Test といった流れが一般的なワークフローです。
2. Next.js + ESLint プロジェクトを作成 (Bun)
次に Bun を使って同様のプロジェクトを作成し、比較します。
Bun 公式が提供している bun create コマンドであらかじめ Next.js テンプレートが用意されていればそちらを使ってもOKですし、
create-next-app を使って作ったプロジェクトを後から Bun 用に置き換える形でも構いません。

※ 例として、すでに存在する Next.js プロジェクトの package.json を bun install で更新して使う方法を挙げます。

bash
コピーする
編集する
# もしBun未インストールの場合（Linux / macOS）
curl https://bun.sh/install | bash

# 既に存在するNext.jsプロジェクト(my-next-bun-app)へ移動
cd my-next-bun-app

# 依存をインストール（node_modulesがない/更新したい場合など）
bun install

# BunでESLintを実行したい場合は、scripts欄に "lint": "eslint ." のように設定しておく
# package.json例:
#   {
#     "scripts": {
#       "lint": "eslint .",
#       "dev": "next dev",
#       "build": "next build",
#       "start": "next start"
#     }
#   }
2.1. .github/workflows/ci-bun.yml (例)
yaml
コピーする
編集する
name: CI (Bun)

on:
  pull_request:
    branches:
      - develop-bun  # PR先ブランチが 'develop-bun' の場合のみ実行

jobs:
  build-and-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 'latest'

      - name: Install dependencies (Bun)
        run: bun install

      - name: ESLint check
        run: bun run lint
        # scriptsに "lint": "eslint ." 等を設定している場合